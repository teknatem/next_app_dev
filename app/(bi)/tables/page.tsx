'use client';
import {
  Database,
  Table as TableIcon,
  Plus,
  Search,
  Settings,
  BarChart3
} from 'lucide-react';
import Link from 'next/link';

import { Badge } from '@/shared/ui/badge';
import { Button } from '@/shared/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/shared/ui/card';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/shared/ui/tabs';

const tableConfigs = [
  {
    id: 'production_items',
    name: '–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞',
    description:
      '–ö–∞—Ç–∞–ª–æ–≥ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤, –ø–æ–ª—É—Ñ–∞–±—Ä–∏–∫–∞—Ç–æ–≤ –∏ –≥–æ—Ç–æ–≤—ã—Ö –∏–∑–¥–µ–ª–∏–π',
    recordCount: 0,
    lastUpdated: '–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ',
    status: 'ready',
    icon: 'üì¶',
    href: '/tables/production-items'
  },
  {
    id: 'production_items_consumption',
    name: '–†–∞—Å—Ö–æ–¥ –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä—ã',
    description:
      '–£—á–µ—Ç —Ä–∞—Å—Ö–æ–¥–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –ø–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º –∏ –¥–∞—Ç–∞–º',
    recordCount: 0,
    lastUpdated: '–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ',
    status: 'ready',
    icon: 'üìä',
    href: '/tables/production-items-consumption'
  }
];

const TableRow = ({ table }: { table: (typeof tableConfigs)[0] }) => {
  const getStatusColor = (status: string) => {
    switch (status) {
      case 'ready':
        return 'bg-green-100 text-green-800';
      case 'pending':
        return 'bg-yellow-100 text-yellow-800';
      case 'error':
        return 'bg-red-100 text-red-800';
      default:
        return 'bg-gray-100 text-gray-800';
    }
  };

  const getStatusText = (status: string) => {
    switch (status) {
      case 'ready':
        return '–ì–æ—Ç–æ–≤–æ';
      case 'pending':
        return '–í –ø—Ä–æ—Ü–µ—Å—Å–µ';
      case 'error':
        return '–û—à–∏–±–∫–∞';
      default:
        return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    }
  };

  return (
    <div className="flex flex-col lg:flex-row lg:items-center lg:justify-between p-4 border rounded-lg hover:bg-muted/50 transition-colors gap-4">
      {/* –õ–µ–≤–∞—è —á–∞—Å—Ç—å - –∏–∫–æ–Ω–∫–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <div className="flex items-center gap-4 flex-1 min-w-0">
        <div className="text-xl flex-shrink-0">{table.icon}</div>
        <div className="flex-1 min-w-0">
          <h3 className="font-medium truncate">{table.name}</h3>
          <p className="text-sm text-muted-foreground truncate">
            {table.description}
          </p>
        </div>
      </div>

      {/* –°—Ä–µ–¥–Ω—è—è —á–∞—Å—Ç—å - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="flex items-center gap-6 text-sm flex-shrink-0">
        <div className="text-center">
          <div className="font-medium">
            {table.recordCount.toLocaleString()}
          </div>
          <div className="text-muted-foreground">–∑–∞–ø–∏—Å–µ–π</div>
        </div>
        <div className="text-center">
          <Badge className={getStatusColor(table.status)}>
            {getStatusText(table.status)}
          </Badge>
        </div>
      </div>

      {/* –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å - –¥–µ–π—Å—Ç–≤–∏—è */}
      <div className="flex items-center gap-2 lg:ml-6 flex-shrink-0">
        <Button asChild size="sm" className="flex-1 lg:flex-none">
          <Link href={table.href}>
            <Search className="w-4 h-4 mr-2" />
            <span className="lg:hidden">–ü—Ä–æ—Å–º–æ—Ç—Ä</span>
          </Link>
        </Button>
        <Button asChild variant="outline" size="sm">
          <Link href={`${table.href}/analytics`}>
            <BarChart3 className="w-4 h-4" />
          </Link>
        </Button>
        <Button asChild variant="outline" size="sm">
          <Link href={`${table.href}/settings`}>
            <Settings className="w-4 h-4" />
          </Link>
        </Button>
      </div>
    </div>
  );
};

const QuickActions = () => (
  <Card>
    <CardHeader>
      <CardTitle className="flex items-center gap-2">
        <Plus className="w-5 h-5" />
        –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
      </CardTitle>
    </CardHeader>
    <CardContent className="space-y-3">
      <Button asChild className="w-full justify-start">
        <Link href="/import">
          <Plus className="w-4 h-4 mr-2" />
          –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
        </Link>
      </Button>
      <Button asChild variant="outline" className="w-full justify-start">
        <Link href="/tables/new">
          <TableIcon className="w-4 h-4 mr-2" />
          –î–æ–±–∞–≤–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É
        </Link>
      </Button>
      <Button asChild variant="outline" className="w-full justify-start">
        <Link href="/analytics">
          <BarChart3 className="w-4 h-4 mr-2" />
          –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
        </Link>
      </Button>
    </CardContent>
  </Card>
);

export default function TablesPage() {
  return (
    <div className="p-6 space-y-6">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-3xl font-bold flex items-center gap-3">
            <Database className="w-8 h-8" />
            –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü–∞–º–∏
          </h1>
          <p className="text-muted-foreground mt-2">
            –ü—Ä–æ—Å–º–æ—Ç—Ä, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü–∞–º–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
          </p>
        </div>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-4 gap-6">
        {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
        <div className="lg:col-span-3">
          <Tabs defaultValue="all" className="space-y-4">
            <TabsList className="grid w-full grid-cols-3">
              <TabsTrigger value="all">–í—Å–µ —Ç–∞–±–ª–∏—Ü—ã</TabsTrigger>
              <TabsTrigger value="production">–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ</TabsTrigger>
              <TabsTrigger value="analytics">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞</TabsTrigger>
            </TabsList>

            <TabsContent value="all" className="space-y-4">
              <div className="space-y-3">
                {tableConfigs.map((table) => (
                  <TableRow key={table.id} table={table} />
                ))}
              </div>
            </TabsContent>

            <TabsContent value="production" className="space-y-4">
              <div className="space-y-3">
                {tableConfigs
                  .filter((table) => table.id.includes('production'))
                  .map((table) => (
                    <TableRow key={table.id} table={table} />
                  ))}
              </div>
            </TabsContent>

            <TabsContent value="analytics" className="space-y-4">
              <div className="text-center py-8 text-muted-foreground">
                –ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ç–∞–±–ª–∏—Ü—ã –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö
              </div>
            </TabsContent>
          </Tabs>
        </div>

        {/* –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å */}
        <div className="space-y-4">
          <QuickActions />
        </div>
      </div>
    </div>
  );
}
