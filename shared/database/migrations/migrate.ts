import { config as loadEnv } from 'dotenv';
import { drizzle } from 'drizzle-orm/postgres-js';
import { migrate } from 'drizzle-orm/postgres-js/migrator';
import postgres from 'postgres';

import { MIGRATION_CONFIG } from '../connection/config';

// Load environment variables (.env.local takes precedence if exists)
loadEnv({ path: '.env.local' });
loadEnv();

/**
 * –£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
 * @returns {{url: string, type: string}}
 */
function getDatabaseConfig() {
  const url =
    process.env.REPLITDATABASE_URL ||
    process.env.DATABASE_URL ||
    process.env.POSTGRES_URL;

  if (!url) {
    throw new Error(
      'Database URL not found. Please set REPLITDATABASE_URL, DATABASE_URL or POSTGRES_URL environment variable.'
    );
  }

  return {
    url,
    type: url.includes('neon.tech') ? 'Replit Neon' : 'Local PostgreSQL'
  };
}

/**
 * –£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
 * @param {{url: string, type: string}} dbConfig
 */
function logDatabaseConnection(dbConfig: { url: string; type: string }) {
  console.log(`[DB] Using: ${dbConfig.type}`);
}

/**
 * –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
 */
export async function runMigrations() {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—É—é —É—Ç–∏–ª–∏—Ç—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
  const dbConfig = getDatabaseConfig();

  const client = postgres(dbConfig.url);
  const db = drizzle(client);

  try {
    console.log('üîÑ Applying database migrations...');
    logDatabaseConnection(dbConfig);

    await migrate(db, {
      migrationsFolder: MIGRATION_CONFIG.migrationsFolder
    });

    console.log('‚úÖ Migrations applied successfully');
  } catch (error) {
    console.error('‚ùå Migration failed:', error);
    throw error;
  } finally {
    await client.end();
  }
}

// –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (import.meta.url === `file://${process.argv[1]}`) {
  runMigrations().catch(console.error);
}
